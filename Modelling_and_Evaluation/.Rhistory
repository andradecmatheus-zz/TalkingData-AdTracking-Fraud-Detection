col=1:4, lty=1:1, lwd=1, seg.len=0.5, cex=0.75, x.intersp=0.3, y.intersp=0.2)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.5,x=0.85, bty="n", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75, x.intersp=0.3, y.intersp=0.2)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.5,x=0.85, bty="n", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75, x.intersp=0.3, y.intersp=0.2)
### ROC curves of undersampled models
roc.curve(under_test$is_attributed, pred_model_underNB, plotit = T, col = 1)
roc.curve(under_test$is_attributed, pred_model_underLDA, plotit = T, col = 2, add=T)
roc.curve(under_test$is_attributed, pred_model_underDT, plotit = T, col = 3, add=T)
roc.curve(under_test$is_attributed, pred_model_underRF, plotit = T, col = 4, add=T)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.5,x=0.85, bty="n", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75, x.intersp=0.3, y.intersp=0.2)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.4,x=0.85, bty="n", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75, x.intersp=0.3, y.intersp=0.2)
erNB, plotit = T, col = 1)
roc.curve(under_test$is_attributed, pred_model_underLDA, plotit = T, col = 2, add=T)
roc.curve(under_test$is_attributed, pred_model_underDT, plotit = T, col = 3, add=T)
roc.curve(under_test$is_attributed, pred_model_underRF, plotit = T, col = 4, add=T)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.4,x=0.85, bty="n", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.2,xjust=1)
roc.curve(under_test$is_attributed, pred_model_underNB, plotit = T, col = 1)
roc.curve(under_test$is_attributed, pred_model_underLDA, plotit = T, col = 2, add=T)
roc.curve(under_test$is_attributed, pred_model_underDT, plotit = T, col = 3, add=T)
roc.curve(under_test$is_attributed, pred_model_underRF, plotit = T, col = 4, add=T)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.4,x=0.85, bty="n", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.2,xjust=1)
### ROC curves of undersampled models
roc.curve(under_test$is_attributed, pred_model_underNB, plotit = T, col = 1)
roc.curve(under_test$is_attributed, pred_model_underLDA, plotit = T, col = 2, add=T)
roc.curve(under_test$is_attributed, pred_model_underDT, plotit = T, col = 3, add=T)
roc.curve(under_test$is_attributed, pred_model_underRF, plotit = T, col = 4, add=T)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.4,x=0.85, bty="o", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.4,x=0.85, bty="o", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.2,xjust=1)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.4,x=0.85, bty="o", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.2,xjust=1)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.4,x=0.85, bty="o", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.2,xjust=2)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.4,x=0.85, bty="o", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.2,xjust=0)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.4,x=0.85, bty="o", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.3,xjust=0)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.4,x=0.85, bty="o", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.4,xjust=0)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.3,x=0.85, bty="o", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.4,xjust=0)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.2,x=0.85, bty="o", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.4,xjust=0)
### ROC curves of undersampled models
roc.curve(under_test$is_attributed, pred_model_underNB, plotit = T, col = 1)
roc.curve(under_test$is_attributed, pred_model_underLDA, plotit = T, col = 2, add=T)
roc.curve(under_test$is_attributed, pred_model_underDT, plotit = T, col = 3, add=T)
roc.curve(under_test$is_attributed, pred_model_underRF, plotit = T, col = 4, add=T)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.2,x=0.85, bty="o", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.4,xjust=0)
underRF_AUC
underDT_AUC
underLDA_AUC
## creating a AUC values vector for each undersampled model
under_aucModels <- c(
underNB_AUC  = underNB_AUC,
underLDA_AUC = underLDA_AUC,
underDT_AUC  = underDT_AUC,
underRF_AUC  = underRF_AUC,
# underAda_AUC = underAda_AUC,
# underSVM_AUC = underSVM_AUC,
# underGBM_AUC = underGBM_AUC,
# underNN_AUC  = underNN_AUC
)
### best undersampled model
head(sort(under_aucModels, decreasing = T), 1)
# roc.curve(under_test$is_attributed, pred_model_underAda, plotit = T, col = 5, add=T)
# roc.curve(under_test$is_attributed, pred_model_underSVM, plotit = T, col = 6, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underGBM, plotit = T, col = 7, add=T)#
# roc.curve(under_test$is_attributed, pred_model_underNN, plotit = T, col = 8, add=T)#
legend(y=0.2,x=0.85, bty="o", #"bottomright"
c(paste("NaiveBayes", round(underNB_AUC, 3)),
paste("LDA", round(underLDA_AUC, 3)),
paste("rpart", round(underDT_AUC, 3)),
paste("RandForest", round(underRF_AUC, 3))
# paste("AdaBoost", round(underAda_AUC, 3)),
# paste("SVM", round(underAda_AUC, 3)),
# paste("GBM", round(underGBM_AUC, 3)),
# paste("NN", round(underGBM_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.4,xjust=0)
## creating a AUC values vector for each undersampled model
under_aucModels <- c(
underNB_AUC  = underNB_AUC,
underLDA_AUC = underLDA_AUC,
underDT_AUC  = underDT_AUC,
underRF_AUC  = underRF_AUC,
# underAda_AUC = underAda_AUC,
# underSVM_AUC = underSVM_AUC,
# underGBM_AUC = underGBM_AUC,
# underNN_AUC  = underNN_AUC
)
## creating a AUC values vector for each undersampled model
under_aucModels <- c(
underNB_AUC  = underNB_AUC,
underLDA_AUC = underLDA_AUC,
underDT_AUC  = underDT_AUC,
underRF_AUC  = underRF_AUC,
# underAda_AUC = underAda_AUC,
# underSVM_AUC = underSVM_AUC,
# underGBM_AUC = underGBM_AUC,
# underNN_AUC  = underNN_AUC
)
## creating a AUC values vector for each undersampled model
under_aucModels <- c(
underNB_AUC  = underNB_AUC,
underLDA_AUC = underLDA_AUC,
underDT_AUC  = underDT_AUC,
underRF_AUC  = underRF_AUC
# underAda_AUC = underAda_AUC,
# underSVM_AUC = underSVM_AUC,
# underGBM_AUC = underGBM_AUC,
# underNN_AUC  = underNN_AUC
)
### best undersampled model
head(sort(under_aucModels, decreasing = T), 1)
##### Stage 5: Applying Random OVERSAMPLING to balance the dataset's class variables:
table(train$is_attributed) # 79809*2 = N
##### Stage 5: Applying Random OVERSAMPLING to balance the dataset's class variables:
table(train$is_attributed) # 79809*2 = N
over_train <- ovun.sample(is_attributed ~.,
data = train,
method = "over",
N = 159618, seed = 123)$data  #320 #138104
table(test$is_attributed) #19964*2 = N
over_test <- ovun.sample(is_attributed ~.,
data = test,
method = "over",
N = 39926, seed = 123)$data #134 #134
table(over_train$is_attributed)
table(over_test$is_attributed)
##### Stage 6: Creating the oversampled models
### Model 1: Modelo Naive Bayes
set.seed(12345)
model_overNB = train(over_train[,-7], over_train[,7], method='naive_bayes')
pred_model_overNB = predict(model_overNB, over_test[,-7])
confusionMatrix(pred_model_overNB, over_test$is_attributed)
overNB_AUC <- auc(roc(as.integer(over_test$is_attributed), as.integer(pred_model_overNB)))
overNB_AUC
###### ROC curves of oversampled models
roc.curve(over_test$is_attributed, pred_model_overNB, plotit = T, col = 1)
roc.curve(over_train$is_attributed, pred_model_overLDA, plotit = T, col = 2, add=T)
roc.curve(over_test$is_attributed, pred_model_overDT, plotit = T, col = 3, add=T)
roc.curve(over_test$is_attributed, pred_model_overRF, plotit = T, col = 4, add=T)
# roc.curve(over_test$is_attributed, pred_model_overAda, plotit = T, col = 5, add=T)
# roc.curve(over_test$is_attributed, pred_model_overSVM, plotit = T, col = 6, add=T)
# roc.curve(over_test$is_attributed, pred_model_overGBM, plotit = T, col = 7, add=T)
# roc.curve(over_test$is_attributed, pred_model_overNN, plotit = T, col = 8, add=T)
legend(y=0.2,x=0.85, bty="o", #"bottomright"
c(paste("NaiveBayes", round(overNB_AUC, 3)),
paste("LDA", round(overLDA_AUC, 3)),
paste("rpart", round(overDT_AUC, 3)),
paste("RandForest", round(overRF_AUC, 3))
# paste("AdaBoost", round(overAda_AUC, 3)),
# paste("SVM", round(overSVM_AUC, 3)),
# paste("GBM", round(overGBM_AUC, 3)),
# paste("NN", round(overNN_AUC, 3))
),
col=1:4, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.4,xjust=0)
# creating a AUC values vector for each oversampled model
over_aucModels <- c(
overNB_AUC  = overNB_AUC,
overLDA_AUC = overLDA_AUC,
overDT_AUC  = overDT_AUC,
overRF_AUC  = overRF_AUC
# overAda_AUC = overAda_AUC,
# overSVM_AUC = overSVM_AUC,
# overGBM_AUC = overGBM_AUC
# overNN_AUC = overNN_AUC
)
# best oversampled model
head(sort(over_aucModels, decreasing = T), 1)
##### Stage 7: Optimizing the best model: Undersampled Random Forest
set.seed(12345)
model_underRFop = train(under_train[,-7], under_train[,7],
method='rf',
metric="Accuracy",
ntree = 100,
nodesize = 10)
pred_model_underRFop = predict(model_underRFop, under_test[,-7])
confusionMatrix(pred_model_underRFop, under_test$is_attributed)
# the model was improved
roc.curve(under_test$is_attributed, pred_model_underRF, plotit = T, col = 4)
roc.curve(under_test$is_attributed, pred_model_underRFop, plotit = T, col = 1, add=T)
legend(y=0.15,x=0.85, bty="o", #"bottomright"
c(paste("RandForest", round(underRF_AUC, 3)),
paste("RandForestop", round(underRF_AUCop, 3))
),
col=1:2, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.4,xjust=0)
pred_model_underRFop = predict(model_underRFop, under_test[,-7])
confusionMatrix(pred_model_underRFop, under_test$is_attributed)
underRF_AUCop <- auc(roc(as.integer(under_test$is_attributed), as.integer(pred_model_underRFop)))
# the model was improved
roc.curve(under_test$is_attributed, pred_model_underRF, plotit = T, col = 4)
roc.curve(under_test$is_attributed, pred_model_underRFop, plotit = T, col = 1, add=T)
legend(y=0.15,x=0.85, bty="o", #"bottomright"
c(paste("RandForest", round(underRF_AUC, 3)),
paste("RandForestop", round(underRF_AUCop, 3))
),
col=1:2, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.4,xjust=0)
legend(y=0.13,x=0.85, bty="o", #"bottomright"
c(paste("RandForest", round(underRF_AUC, 3)),
paste("RandForestop", round(underRF_AUCop, 3))
),
col=1:2, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.4,xjust=0)
# the model was improved
roc.curve(under_test$is_attributed, pred_model_underRF, plotit = T, col = 4)
roc.curve(under_test$is_attributed, pred_model_underRFop, plotit = T, col = "yellow", add=T)
legend(y=0.13,x=0.85, bty="o", #"bottomright"
c(paste("RandForest", round(underRF_AUC, 3)),
paste("RandForestop", round(underRF_AUCop, 3))
),
col=1:2, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.4,xjust=0)
legend(y=0.13,x=0.85, bty="o", #"bottomright"
c(paste("RandForest", round(underRF_AUC, 3)),
paste("RandForestop", round(underRF_AUCop, 3))
),
col=1:2, lty=1:2, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.4,xjust=0)
# the model was improved
roc.curve(under_test$is_attributed, pred_model_underRF, plotit = T, col = 1)
roc.curve(under_test$is_attributed, pred_model_underRFop, plotit = T, col = 2, add=T)
legend(y=0.13,x=0.85, bty="o", #"bottomright"
c(paste("RandForest", round(underRF_AUC, 3)),
paste("RandForestop", round(underRF_AUCop, 3))
),
col=1:2, lty=1:2, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.4,xjust=0)
# the model was improved
roc.curve(under_test$is_attributed, pred_model_underRF, plotit = T, col = 1)
roc.curve(under_test$is_attributed, pred_model_underRFop, plotit = T, col = 2, add=T)
legend(y=0.13,x=0.85, bty="o", #"bottomright"
c(paste("RandForest", round(underRF_AUC, 3)),
paste("RandForestop", round(underRF_AUCop, 3))
),
col=1:2, lty=1:1, lwd=1, seg.len=0.7, cex=0.75,
x.intersp=0.3, y.intersp=0.4,xjust=0)
# so the best model was the "improved undersampled random forest"
chosenModel <- model_underRFop
### Stage 8: File Submission on Kaggle
# loading "test" kaggle dataset
submit <- fread(file.choose(), header=T)
##### Stage 7: Optimizing the best model: Undersampled Random Forest
set.seed(12345)
model_underRFop = train(under_train[,-7], under_train[,7],
method='rf',
metric="Accuracy",
ntree = 100,
nodesize = 10)
pred_model_underRFop = predict(model_underRFop, under_test[,-7])
confusionMatrix(pred_model_underRFop, under_test$is_attributed)
underRF_AUCop <- auc(roc(as.integer(under_test$is_attributed), as.integer(pred_model_underRFop)))
submit1 <- submit[,-1]
submit1$attributed_time <- 0
# preparing data for modelling
submit1 <- featureEngineering(submit1, 1)
gc() # to free memory
## predicting the test
p <- predict(chosenModel, submit1)
## generating the dataframe that will be submited
d <- data.frame(click_id = submit$click_id, is_attributed = p)
fwrite(d, "submit_op_under_rf3.csv")
gc() # to free memory
gc() # to free memory
## Libraries
library(data.table)
library(dplyr)
library(ROSE)
library(caret)
library(ROCR)
library(pROC)
## Loading dataset
#df <- fread("../Datasets/train_sample.csv", header=T)
df <- fread(file.choose(), header=T)
dim(df)
str(df)
df1 <- fread(file.choose(), header=T)
identical(df,df1)
all(df==df1)
d
p
